## Get Roster
select t.name, pl.id, pr.first, pr.last
from team t
join player pl
	on t.id = pl.team
join person pr
	on pl.person = pr.id
where t.id = 1
order by pr.last, pr.first


## Get Goalies
select distinct(g.player), pr.first, pr.last
from goalie g
join player pl
	on g.player = pl.id
join person pr
	on pl.person = pr.id
order by pr.last

//Insert person and player
INSERT INTO `dmahockey`.`person` (`first`, `last`) VALUES ('John', 'Doe');
INSERT INTO `dmahockey`.`player` (`person`, `team`) VALUES ('2', '1'); 	//person, team



//Get Penalties
SELECT * 
FROM  `all_types` 
WHERE category =  'penalty_detail'
ORDER BY typeName

//Penalties query
SELECT pr.first, pr.last, t.name, sum(p.duration) as pm, (sum(p.duration)/gp.games) as 'pen_ratio'
FROM team t
JOIN player pl
	ON t.id = pl.team
JOIN person pr
	ON pl.person = pr.id
JOIN event e
	ON pl.id = e.player
JOIN penalty p
	ON e.id = p.id
JOIN (SELECT t.id, count(t.id) as 'games'
        FROM team t
        JOIN schedule s
            ON t.id = s.home or t.id = s.away
        JOIN game g
            ON s.id = g.id
		GROUP BY t.id) gp
ON t.id = gp.id
WHERE t.season = 9
	AND e.type = 3
GROUP BY pr.first, pr.last, t.name
ORDER BY pm DESC



// **** under construction Points Query

#BASIC:
SELECT player,
	count(case when type = 1 then 1 end) G,
	count(case when type = 2 then 1 end) A,
	count(case when type in (1,2) then 1 end) Pts
FROM event
GROUP BY player
ORDER BY Pts DESC, G DESC, player

#FULL
SELECT p.first, p.last, t.abbreviation,
	count(case when e.type = 1 then 1 end) G,
	count(case when e.type = 2 then 1 end) A,
	count(case when e.type in (1,2) then 1 end) Pts
FROM event e
JOIN person p
	ON e.player = p.id
JOIN player pl
	ON e.player = pl.id
JOIN team t
	ON pl.team = t.id
WHERE t.season = 9
GROUP BY p.first, p.last, t.abbreviation
ORDER BY Pts DESC, G DESC, p.last, p.first
LIMIT 10


### GOALIE QUERY ###
SELECT pr.first, 
	pr.last, 
	tm.abbreviation,
	ROUND(sum(g.duration)/57, 1) as games,
	sum(g.goals_against) as goals, 
	ROUND(sum(g.goals_against)/(sum(g.duration)/57), 2) AS gaa,
	COUNT(case when g.goals_against = 0 then 1 end) as so
FROM goalie g
JOIN player pl
	on g.player = pl.id
JOIN person pr
	on pl.person = pr.id
JOIN team tm
	on pl.team = tm.id
WHERE tm.season = 9
GROUP BY pr.first, pr.last
HAVING games >= 3
ORDER BY gaa, games DESC, pr.last

// ***** Hat Tricks ***** //
select e.game, e.player, count(e.player)
from event e
where e.type = 1
group by e.game, e.player
having count(e.player) = 3

### ***** Historic Goalie Shutouts ***** ###
SELECT person, sum(shutouts) as 'SO'
from historic_goalie
group by person
order by sum(shutouts) desc

### ***** Historic Goalie GAA ***** ###
SELECT person, 
	sum(games_played) as 'GP',
	sum(goals_against) as 'GA',
	(sum(goals_against)/sum(games_played)) as 'GAA'
from historic_goalie
group by person
HAVING sum(games_played) > 9
ORDER BY `GAA`  ASC

### ***** Historic Most Goals ***** ###
select hp.person, p.first, p.last, sum(hp.goals)
from historic_player hp
join person p
on hp.person = p.id
group by hp.person, p.first, p.last
order by sum(hp.goals) desc

### ***** Historic Most Points ***** ###
select hp.person, p.first, p.last, sum(hp.goals) + sum(hp.assists) as 'Points'
from historic_player hp
join person p
on hp.person = p.id
group by hp.person, p.first, p.last
order by sum(hp.goals) + sum(hp.assists) desc

### ***** Historic Most Penalty Minutes ***** ###
select hp.person, p.first, p.last, sum(hp.penalty_minutes) as 'PM'
from historic_player hp
join person p
on hp.person = p.id
group by hp.person, p.first, p.last
order by sum(hp.penalty_minutes) desc

## ***** Get current goals/assists/penalty_minutes ***** ###




## ----- Historic + Current Most Goals ----- ##
SELECT p.first, p.last, (sum(hp.goals) + curr.g) as 'goals'
from historic_player hp
join person p
	on hp.person = p.id
left join (SELECT pe.id,
		count(case when e.type = 1 then 1 end) G
		FROM player pl
		JOIN person pe
		ON pl.person = pe.id
		LEFT JOIN event e
		on pl.id = e.player
		GROUP BY pe.id) as curr
on hp.person = curr.id
group by hp.person, p.first, p.last
order by (sum(hp.goals) + curr.g) desc
limit 10

SELECT per.first, per.last, sum(curr.goals) as goals
from  

((SELECT hp.person, hp.goals
from historic_player hp)

	UNION
(SELECT pe.id as person,
count(case when e.type = 1 then 1 end) goals
FROM player pl
JOIN person pe
ON pl.person = pe.id
LEFT JOIN event e
on pl.id = e.player
GROUP BY pe.id)) as curr

join person per
on curr.person = per.id
group by curr.person


select person, per.first, per.last, sum(tot.goals) as goals
from 
((SELECT hp.person, sum(hp.goals) as goals
from historic_player hp
group by hp.person)

	UNION
(SELECT pe.id as person,
count(case when e.type = 1 then 1 end) goals
FROM player pl
JOIN person pe
ON pl.person = pe.id
LEFT JOIN event e
on pl.id = e.player
GROUP BY pe.id)) tot
join person per
on tot.person = per.id
group by person, per.first, per.last
order by goals DESC, per.last, per.first


## ----- Historic + Current Most Penalty Minutes ----- ##
SELECT per.first, per.last, sum(al.penalty_minutes) as pm
from  ((select person, penalty_minutes
from historic_player)
UNION
(SELECT pr.id, 
sum(case when p.duration = null then 0 else p.duration end) as pm
FROM team t
JOIN player pl
	ON t.id = pl.team
JOIN person pr
	ON pl.person = pr.id
JOIN event e
	ON pl.id = e.player
JOIN penalty p
	ON e.id = p.id
JOIN (SELECT t.id, count(t.id) as 'games'
		FROM team t
		JOIN schedule s
			ON t.id = s.home or t.id = s.away
		JOIN game g
			ON s.id = g.id
		GROUP BY t.id) gp
ON t.id = gp.id
WHERE t.season = 9
	AND e.type = 3
GROUP BY pr.id)) as al
join person per
on al.person = per.id
group by al.person
order by pm desc
limit 10


## ----- Historic + Current Most Points ----- ##
SELECT p.first, p.last, 
	sum(hp.goals) as 'Goals', 
	sum(hp.assists) as 'Assists', 
	sum(hp.goals) + sum(hp.assists) as 'Points'
from historic_player hp
join person p
on hp.person = p.id
group by p.first, p.last
order by sum(hp.goals) + sum(hp.assists) desc
limit 10


SELECT per.first, per.last, sum(al.penalty_minutes) as pm
from  ((select person, penalty_minutes
from historic_player)
UNION
(SELECT pr.id, 
sum(case when p.duration = null then 0 else p.duration end) as pm
FROM team t
JOIN player pl
	ON t.id = pl.team
JOIN person pr
	ON pl.person = pr.id
JOIN event e
	ON pl.id = e.player
JOIN penalty p
	ON e.id = p.id
JOIN (SELECT t.id, count(t.id) as 'games'
		FROM team t
		JOIN schedule s
			ON t.id = s.home or t.id = s.away
		JOIN game g
			ON s.id = g.id
		GROUP BY t.id) gp
ON t.id = gp.id
WHERE t.season = 9
	AND e.type = 3
GROUP BY pr.id)) as al
join person per
on al.person = per.id
group by al.person
order by pm desc